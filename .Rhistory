model2vars<-model2vars[complete.cases(model2vars),]
model2<-zelig(fp ~ lpolity2 + dpolity2 + lrgdpch2 + drgdpch2 + spline1 + spline2 + spline3 + lopenk2 + dopenk2,
model="logit",
robust=TRUE,
data=model2vars,
cite=F)
model2classif<-(table(model2$result$fitted.values>.5, model2$result$y))
model2correct<-(model2classif[1,1] + model2classif[2,2])
(model2correct/nrow(model2vars))*100
summary(model2)
model3vars<-subset(modelvars, select=c("fp", "lpolity2", "dpolity2", "lrgdpch2", "drgdpch2", "spline1", "spline2", "spline3", "lfdiinward2", "dfdiinward2"))
model3vars<-model3vars[complete.cases(model3vars),]
model3<-zelig(fp ~ lpolity2 + dpolity2 + lrgdpch2 + drgdpch2 + spline1 + spline2 + spline3 + lfdiinward2 + dfdiinward2,
model="logit",
robust=TRUE,
data=model3vars,
cite=F)
model3classif<-(table(model3$result$fitted.values>.5, model3$result$y))
model3correct<-(model3classif[1,1] + model3classif[2,2])
(model3correct/nrow(model3vars))*100
summary(model3)
model4vars<-subset(modelvars, select=c("fp", "lpolity2", "dpolity2", "lrgdpch2", "drgdpch2", "spline1", "spline2", "spline3", "lfpistock2", "dfpistock2"))
model4vars<-model4vars[complete.cases(model4vars),]
model4<-zelig(fp ~ lpolity2 + dpolity2 + lrgdpch2 + drgdpch2 + spline1 + spline2 + spline3 + lfpistock2 + dfpistock2,
model="logit",
robust=TRUE,
data=model4vars,
cite=F)
model4classif<-(table(model4$result$fitted.values>.5, model4$result$y))
model4correct<-(model4classif[1,1] + model4classif[2,2])
(model4correct/nrow(model4vars))*100
summary(model4)
model5vars<-subset(modelvars, select=c("fp", "lpolity2", "dpolity2", "lrgdpch2", "drgdpch2", "spline1", "spline2", "spline3", "lopenk2", "dopenk2", "lfdiinward2", "dfdiinward2", "lfpistock2", "dfpistock2"))
model5vars<-model5vars[complete.cases(model5vars),]
model5<-zelig(fp ~ lpolity2 + dpolity2 + lrgdpch2 + drgdpch2 + spline1 + spline2 + spline3 + lopenk2 + dopenk2 + lfdiinward2 + dfdiinward2 + lfpistock2  + dfpistock2,
model="logit",
robust=TRUE,
data=model5vars,
cite=F)
model5classif<-(table(model5$result$fitted.values>.5, model5$result$y))
model5correct<-(model5classif[1,1] + model5classif[2,2])
(model5correct/nrow(model5vars))*100
summary(model5)
summary(model5)
zvars<-subset(df, select=c("fp", "lpolity2", "dpolity2", "lrgdpch2", "drgdpch2", "spline1", "spline2", "spline3", "lopenk2", "dopenk2", "lfdiinward2", "dfdiinward2", "lfpistock2", "dfpistock2"))
zvars<-df[complete.cases(df),]
z.out<-zelig(fp ~ lpolity2 + dpolity2 + lrgdpch2 + drgdpch2 + spline1 + spline2 + spline3 + lopenk2 + dopenk2 + lfdiinward2 + dfdiinward2 + lfpistock2  + dfpistock2,
model="logit",
robust=TRUE,
data=zvars,
cite=F)
z.out.classif<-(table(z.out$result$fitted.values>.5, z.out$result$y))
zcorrect<-(z.out.classif[1,1] + z.out.classif[2,2])
zcorrect
install.packages("BMS")
require(BMS)
?bms
mainmodel = bms(zvars, mprior = "uniform", g = "UIP", user.int = F)
View(zvars)
f <- formula(fp ~ lpolity2 + dpolity2 + lrgdpch2 + drgdpch2 + spline1 +
spline2 + spline3 + lopenk2 + dopenk2 +
lfdiinward2 + dfdiinward2 + lfpistock2  +
dfpistock2)
?bic.glm
install.packages("BMA")
require(BMA)
?bic.glm
glm.out <- bic.glm(f, data = zvars, glm.family = binomal())
glm.out <- bic.glm(f, data = zvars, glm.family = logit())
glm.out <- bic.glm(f, data = zvars, glm.family = "binomial")
summary(glm.out)
imageplot.bma(glm.out)
imageplot.bma(glm.out, color="blackandwhite")
imageplot.bma(glm.out, color=c("grey", "black")
imageplot.bma(glm.out, color=c("grey", "black"))
imageplot.bma(glm.out, color=c("grey", "black", "white"))
imageplot.bma(glm.out, color=c("grey", "black", "white"), order="probne0")
imageplot.bma(glm.out, color=c("grey", "black", "white"), order="probne0", title="sdf")
imageplot.bma(glm.out, color=c("grey", "black", "white"), order="probne0", main="sdf")
imageplot.bma(glm.out, color=c("grey", "black", "white"), order="probne0", main="sdf")
names(glm.out)
glm.out$postprob
glm.out$probne0
bmastats<-glm.out$probne0
bmastats
bmastats<-as.data.frame(glm.out$probne0)
View(bmastats)
require(ggplot2)
qplot(bmastats)
bmastats<-data.frame(glm.out$probne0)
View(bmastats)
row.names(bmastats)
bmastats<-row.names(bmastats)
bmastats<-as.data.frame(glm.out$probne0)
bmastats$Variables<-row.names(bmastats)
View(bmastats)
imageplot.bma(glm.out, color=c("grey", "black", "white"), order="probne0")
bmastats<-as.data.frame(glm.out$probne0)
bmastats$Variables<-row.names(bmastats)
names(bmastats)<-c("Probability", "Variables")
View(bmastats)
qplot(bmastats)
ggplot(bmastats, aes(x="Variables", y="Probability"))
ggplot(bmastats, aes(x="Variables", y="Probability")) +
geom_bar()
summary(bmastats$Variables)
summary(bmastats$Probability)
bmastats$Variables<-as.factor(bmastats$Variables)
ggplot(bmastats, aes(x="Variables", y="Probability")) +
geom_bar()
ggplot(bmastats, aes(x=Variables, y=Probability)) +
geom_bar()
?reorder
bmastats$Variables2<-reorder(bmastats$Variables, bmastats$Probability)
View(bmastats)
bmastats$Variables<-reorder(bmastats$Variables, bmastats$Probability)
ggplot(bmastats, aes(x=Variables, y=Probability)) +
geom_bar()
?reorder
bmastats$Variables<-reorder(bmastats$Variables, bmastats$Probability, decreasing=TRUE)
ggplot(bmastats, aes(x=Variables, y=Probability)) +
geom_bar()
bmastats$Variables<-reorder(bmastats$Variables, -bmastats$Probability)
ggplot(bmastats, aes(x=Variables, y=Probability)) +
geom_bar()
ggplot(bmastats, aes(x=Variables, y=Probability)) +
geom_bar() +
theme_bw()
ggplot(bmastats, aes(x=Variables, y=Probability)) +
geom_bar() +
theme_bw() +
labs(y="Probability of Inclusion")
zvars<-subset(df, select=c("fp", "lpolity2", "dpolity2", "lrgdpch2", "drgdpch2", "lfp", "lopenk2", "dopenk2", "lfdiinward2", "dfdiinward2", "lfpistock2", "dfpistock2"))
zvars<-subset(df, select=c("fp", "lpolity2", "dpolity2", "lrgdpch2", "drgdpch2", "lfp", "lopenk2", "dopenk2", "lfdiinward2", "dfdiinward2", "lfpistock2", "dfpistock2"))
df<-subset(df, select=c("fp", "scode", "year", "lpolity2", "dpolity2", "lrgdpch", "lrgdpch2", "drgdpch","drgdpch2", "lopenk", "dopenk", "lopenk2", "dopenk2", "lfdiinward", "lfdiinward2", "dfdiinward","dfdiinward2", "lfpistock", "lfpistock2", "dfpistock", "dfpistock2", "lfp"))
require(Zelig)
require(splines)
modelvars<-read.csv("~/Dropbox/gh_projects/globalization_media_freedom/data/out_modelvars.csv")
df<-read.csv("~/Dropbox/gh_projects/globalization_media_freedom/data/out_df.csv")
df$fp<-as.factor(df$fp)
modelvars<-subset(modelvars, select=c("fp", "scode", "year", "lpolity2", "dpolity2", "lrgdpch", "lrgdpch2", "drgdpch","drgdpch2", "lopenk", "dopenk", "lopenk2", "dopenk2", "lfdiinward", "lfdiinward2", "dfdiinward","dfdiinward2", "lfpistock", "lfpistock2", "dfpistock", "dfpistock2"))
#modelvars<-modelvars[complete.cases(modelvars),]
spline<-ns(1960:2011, df=3)
spline<-as.data.frame(spline)
names(spline)<-c("spline1", "spline2", "spline3")
spline$year<-1960:2011
modelvars<-merge(modelvars, spline, by="year")
modelvars<-modelvars[with(modelvars, order(scode, year)), ]
df<-subset(df, select=c("fp", "scode", "year", "lpolity2", "dpolity2", "lrgdpch", "lrgdpch2", "drgdpch","drgdpch2", "lopenk", "dopenk", "lopenk2", "dopenk2", "lfdiinward", "lfdiinward2", "dfdiinward","dfdiinward2", "lfpistock", "lfpistock2", "dfpistock", "dfpistock2", "lfp"))
df<-merge(df, spline, by="year")
df<-df[with(df, order(scode, year)), ]
zvars<-subset(df, select=c("fp", "lpolity2", "dpolity2", "lrgdpch2", "drgdpch2", "lfp", "lopenk2", "dopenk2", "lfdiinward2", "dfdiinward2", "lfpistock2", "dfpistock2"))
zvars<-df[complete.cases(df),]
z.out<-zelig(fp ~ lpolity2 + dpolity2 + lrgdpch2 + drgdpch2 + lfp + lopenk2 + dopenk2 + lfdiinward2 + dfdiinward2 + lfpistock2  + dfpistock2,
model="logit",
robust=TRUE,
data=zvars,
cite=F)
summary(z.out)
z.out<-zelig(fp ~ lpolity2 + dpolity2 + lrgdpch2 + drgdpch2 + lfp + lopenk2 + dopenk2 + lfpistock2  + dfpistock2,
model="logit",
robust=TRUE,
data=zvars,
cite=F)
summary(z.out)
ggplot(bmastats, aes(x=Variables, y=Probability)) +
geom_bar() +
theme_bw() +
labs(y="Probability of Inclusion")
ggplot(bmastats, aes(x=Variables, y=Probability)) +
geom_bar() +
theme_bw() +
coord_flip() +
labs(y="Probability of Inclusion")
bmastats$Variables<-reorder(bmastats$Variables, bmastats$Probability)
ggplot(bmastats, aes(x=Variables, y=Probability)) +
geom_bar() +
theme_bw() +
coord_flip() +
labs(y="Probability of Inclusion")
require(Zelig)
source("/Users/justin/Dropbox/gh_projects/globalization_media_freedom/analyses/main_regressions.R")
trade.r<-seq(min(zvars.trade$lopenk2),max(zvars.trade$lopenk2), 1) # ~ min to max in sample
x.trade<-setx(z.out.trade, lopenk2=trade.r)
s.out<-sim(z.out.trade, x = x.trade)
trade.plot<-plot.ci(s.out, ci=c(90,95,99), qi="ev", leg=4, ylim=0:1,
xlab="Log of Trade Level (% GDP)",
ylab="Expected Probability of Media Freedom")
x.lo <- setx(z.out.trade, lopenk2=0)
x.hi <- setx(z.out.trade, lopenk2=mean(zvars.trade$lopenk2)+sd(zvars.trade$lopenk2))
s.out.trade <- sim(z.out.trade, x = x.lo, x1 = x.hi)
s.out.trade
summary(s.out.trade)
names(s.out.trade)
names(s.out.trade$qi)
names(s.out.trade$qi)[1]
names(s.out.trade$qi)[1,1]
names(s.out.trade$qi)[,1]
names(s.out.trade$qi)[1]
s.out.trade$qi[1]
summary(s.out.trade$qi[1])
head(s.out.trade$qi[1])
mean(s.out.trade$qi[1], na.rm=TRUE)
mean(s.out.trade$qi[1], na.om=TRUE)
mean(s.out.trade$ev)
s.out.trade$qi[12]
s.out.trade$qi[1,2]
s.out.trade$qi[1,1]
s.out.trade$qi[2]
s.out.trade$qi[3]
s.out.trade$qi[1]
f<-s.out.trade$qi[1]
unlist(f)
unlist(s.out.trade$qi[1])
summary(unlist(s.out.trade$qi[1]))
mean(unlist(s.out.trade$qi[1]))
summary(s.out.trade)
mean(unlist(s.out.trade$qi[1]))
summary(s.out.trade$qi[1])
summary(as.numeric(s.out.trade$qi[1]))
names(s.out.trade$qi)
names(s.out.trade$qi$ev)
mean(s.out.trade$qi$ev)
mean(s.out.trade$qi$Expected)
mean(s.out.trade$qi$fd)
mean(unlist(s.out.trade$qi[1]))
mean(unlist(s.out.trade$qi[2]))
summary(s.out.trade)
trade.change.r<-seq(min(zvars.trade$dopenk2),max(zvars.trade$dopenk2), .5) # ~ min to max in sample
x.trade.change<-setx(z.out.trade, dopenk2=trade.change.r)
s.out<-sim(z.out.trade, x = x.trade.change)
trade.change.plot<-plot.ci(s.out, ci=c(90,95,99), qi="ev", leg=4, ylim=0:1,
xlab="Change in Log of Trade Level (% GDP)",
ylab="Expected Probability of Media Freedom")
x.lo <- setx(z.out.trade, dopenk2=0)
x.hi <- setx(z.out.trade, dopenk2=mean(zvars.trade$dopenk2)+sd(zvars.trade$dopenk2))
s.out.trade.change <- sim(z.out.trade, x = x.lo, x1 = x.hi)
df$scode[df$dopenk2>2]
df$scode[df$dopenk2>2,]
subset(df, dopenk2>2)
subset(df, dopenk2>1.5)
names(s.out.trade)[1]
names(s.out.trade)
names(s.out.trade$model)
s.out.trade$model
s.out.trade$model[1]
names(s.out.trade)
s.out.trade$x
s.out.trade$titles
s.out.trade$zcall
s.out.trade
names(s.out)[1]
trade.r<-seq(min(zvars.trade$lopenk2),max(zvars.trade$lopenk2), 1) # ~ min to max in sample
x.trade<-setx(z.out.trade, lopenk2=trade.r)
s.out<-sim(z.out.trade, x = x.trade)
names(s.out)[1]
names(s.out)
summary(zvars.trade$lpolity2)
mean(s.out.trade.change$qi$fd)
mean(unlist(s.out.trade.change$qi[1]))
mean(zvars.trade$dopenk2)+sd(zvars.trade$dopenk2)
mean(zvars.trade$dopenk2)
mean(unlist(s.out.trade.change$qi[2]))
mean(s.out.trade.change$qi$fd)
mean(unlist(s.out.trade.change$qi[1]))
mean(df$lopenk2)
mean(df$lopenk2, na.rm=TRUE)
?BMA
require(BMA)
??BMA
?bma
?BMA
?cite
cite(BMA)
??BMA
?bic.glm
require(BMA)
require(ggplot2)
source("/Users/justin/Dropbox/gh_projects/globalization_media_freedom/analyses/main_regressions.R")
f <- formula(fp ~ lpolity2 + dpolity2 + lrgdpch2 + drgdpch2 + spline1 +
spline2 + spline3 + lopenk2 + dopenk2 +
lfdiinward2 + dfdiinward2 + lfpistock2  +
dfpistock2 + oil + log(internet+1) + ethfrac + relfrac + onset + warl)
glm.out <- bic.glm(f, data = zvars, glm.family = "binomial", robust=TRUE)
imageplot.bma(glm.out, color=c("grey", "black", "white"), order="probne0")
legend("bottom", legend=c("Positive","Negative", "None"), fill=c("grey", "black", "white"), title="Estimated Effect")
bmastats<-as.data.frame(glm.out$probne0)
bmastats$Variables<-row.names(bmastats)
names(bmastats)<-c("Probability", "Variables")
bmastats$Variables<-as.factor(bmastats$Variables)
bmastats$Variables<-reorder(bmastats$Variables, bmastats$Probability)
bma.plot.fpi<-ggplot(bmastats, aes(x=Variables, y=Probability)) +
geom_bar() +
theme_bw() +
coord_flip() +
labs(y="Probability of Inclusion")
bma.plot.fpi
View(bmastats)
View(bmastats)
View(bmastats)
ggplot(bmastats, aes(x=Variables, y=Probability)) +
geom_bar() +
theme_bw() +
coord_flip() +
labs(y="Probability of Inclusion")
ggplot(bmastats, aes(x=Variables, y=Probability)) +
geom_bar(stat="identity") +
theme_bw() +
coord_flip() +
labs(y="Probability of Inclusion")
imageplot.bma(glm.out, color=c("grey", "black", "white"), order="probne0")
ggplot(bmastats, aes(x=Variables, y=Probability)) +
geom_bar(stat="bin") +
theme_bw() +
coord_flip() +
labs(y="Probability of Inclusion")
ggplot(bmastats, aes(x=Variables, y=Probability)) +
geom_bar(stat="identity") +
theme_bw() +
coord_flip() +
labs(y="Probability of Inclusion")
View(bmastats)
f <- formula(fp ~ lpolity2 + dpolity2 + lrgdpch2 + drgdpch2 + spline1 + spline2 + spline3 +
lopenk2 + dopenk2 + lfdiinward2 + dfdiinward2 + oil + log(internet+1) + ethfrac + relfrac + warl + onset)
glm.out <- bic.glm(f, data = controls, glm.family = "binomial", robust=TRUE)
# summary(glm.out)
imageplot.bma(glm.out, color=c("grey", "black", "white"), order="probne0")
legend("bottom", legend=c("Positive","Negative", "None"), fill=c("grey", "black", "white"), title="Estimated Effect")
bmastats<-as.data.frame(glm.out$probne0)
bmastats$Variables<-row.names(bmastats)
names(bmastats)<-c("Probability", "Variables")
bmastats$Variables<-as.factor(bmastats$Variables)
bmastats$Variables<-with(bmastats, reorder(Variables, Probability, mean))
bma.plot.no.fpi<-ggplot(bmastats, aes(x=Variables, y=Probability)) +
geom_bar() +
theme_bw() +
coord_flip() +
labs(y="Probability of Inclusion")
bma.plot.no.fpi
ggplot(bmastats, aes(x=Variables, y=Probability)) +
geom_bar(stat="identity") +
theme_bw() +
coord_flip() +
labs(y="Probability of Inclusion")
imageplot.bma(glm.out, color=c("grey", "black", "white"), order="probne0")
?imageplot
?imageplot.bma
require(reshape2)
require(ggplot2)
require(psData)
require(arm)
require(lmtest)
source("~/Dropbox/R Code/shift.R")
################# LOAD/TRANSFORM CLEANED DATA
setwd("~/Dropbox/gh_projects/media_civil_war")
hist_intrastate<-read.csv("data/hist_intrastate.csv")
warren<-read.csv("data/warren.csv")
maddison<-read.csv("data/maddison.csv")
### Aggregate Warren data into yearly means
warren<-subset(warren, select=c("cowcode", "year", "mdi", "tvli", "radioli", "newsli"))
attach(warren)
warren <-aggregate(warren, by=list(year),
FUN=mean, na.rm=TRUE)
detach(warren)
warren$Year<-warren$Group.1
warren$tvlong<-warren$tvli
warren$tvlong[warren$Year<=1944]<-0
### Merge Warren and Intra-state war data
globalmdi<-merge(hist_intrastate, warren, by=c("Year"), all.x=TRUE)
globalmdi.war<-globalmdi[,c("Year", "civil.wars", "onsets", "states", "mdi", "tvli", "radioli", "newsli", "tvlong")]
globalmdi.war$tvlong<-globalmdi.war$tvli
globalmdi.war$tvlong[1:129]<-0
### Load and aggregate cleaned historical GDP data from Maddison
attach(maddison)
maddison <-aggregate(maddison, by=list(id),
FUN=mean, na.rm=TRUE)
detach(maddison)
maddison$Year<-1816:2003
mdi.war.mad<-merge(globalmdi.war, maddison, by=c("Year"))
### Download Polity2
polity <- PolityGet(vars = "polity2")
polity<-subset(polity, year>=1816 & year<=2003)
attach(polity)
polity <-aggregate(polity, by=list(year),
FUN=mean, na.rm=TRUE)
detach(polity)
polity$Year<-polity$year
historical<-merge(mdi.war.mad, polity, by=c("Year"))
historical$d.civil.wars[2:184]<-diff(historical$civil.wars)
historical$d2.civil.wars[3:184]<-diff(historical$civil.wars,2)
historical$d3.civil.wars[4:184]<-diff(historical$civil.wars,3)
historical$d4.civil.wars[5:184]<-diff(historical$civil.wars,4)
historical$ld.civil.wars<-shift(historical$d.civil.wars, -1)
historical$ld2.civil.wars<-shift(historical$d2.civil.wars, -2)
historical$l.civil.wars<-shift(historical$civil.wars, -1)
historical$l2.civil.wars<-shift(historical$civil.wars, -2)
historical$l3.civil.wars<-shift(historical$civil.wars, -3)
historical$d.onsets[2:184]<-diff(historical$onsets)
historical$d2.onsets[3:184]<-diff(historical$onsets,2)
historical$d3.onsets[4:184]<-diff(historical$onsets,3)
historical$d4.onsets[5:184]<-diff(historical$onsets,4)
historical$ld.onsets<-shift(historical$d.onsets, -1)
historical$ld2.onsets<-shift(historical$d2.onsets, -2)
historical$l.onsets<-shift(historical$onsets, -1)
historical$l2.onsets<-shift(historical$onsets, -2)
historical$l3.onsets<-shift(historical$onsets, -3)
historical$d.tvlong[2:184]<-diff(historical$tvlong)
historical$ld.tvlong<-shift(historical$d.tvlong, -1)
historical$l.tvlong<-shift(historical$tvlong, -1)
historical$d.gdppc[2:184]<-diff(historical$gdppc)
historical$l.gdppc<-shift(historical$gdppc, -1)
historical$d.polity2[2:184]<-diff(historical$polity2)
historical$l.polity2<-shift(historical$polity2, -1)
historical$l2.polity2<-shift(historical$polity2, -1)*shift(historical$polity2, -1)
historical$ww2<-ifelse(historical$Year>=1939 & historical$Year>=1944,1,0)
historical$ww1<-ifelse(historical$Year>=1914 & historical$Year>=1918,1,0)
historical$cold<-ifelse(historical$Year>=1947 & historical$Year>=1991,1,0)
longrun<-historical
longrun[c(2:length(names(longrun)))]<-sapply(longrun[c(2:length(names(longrun)))], function(x) rescale(x))
molten<-melt(subset(longrun, select=c("Year", "tvlong", "civil.wars", "polity2", "gdppc")), id="Year")
cbbPalette <- c("#000000", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
longrun.plot<-ggplot(molten, aes(x=Year)) +
geom_line(aes(y=value, colour=variable, linetype=variable)) +
scale_colour_manual(values=cbbPalette) +
labs(y="Z-scores (standardized values") +
theme_bw()
## Make subset for count models, standardizing all but civil war counts
modelvars2.unscaled<-subset(historical, select=c("Year", "d.civil.wars", "d.onsets", "onsets", "ww1", "ww2", "cold", "l.tvlong", "d.tvlong", "l.gdppc",
"l.polity2", "l2.polity2", "d.polity2", "d.gdppc", "civil.wars", "l.civil.wars", "d2.civil.wars", "l.onsets", "l2.onsets",
"d2.onsets", "states"))
modelvars2.unscaled<-modelvars2.unscaled[complete.cases(modelvars2.unscaled),]
# require(tseries)
# adf.test(modelvars.unscaled$civil.wars)
# adf.test(modelvars.unscaled$onsets)
# acf(modelvars.unscaled$onsets)
detach("package:Zelig", unload=TRUE)
require(arm)
modelvars2<-subset(historical, select=c("Year", "d.civil.wars", "d.onsets", "onsets", "ww1", "ww2", "cold", "l.tvlong", "d.tvlong", "l.gdppc",
"l.polity2", "l2.polity2", "d.gdppc", "d.polity2", "civil.wars", "l.civil.wars", "d2.civil.wars", "l.onsets", "l2.onsets",
"d2.onsets", "ld.onsets", "states"))
modelvars2[c(1,6:length(names(modelvars2)))]<-sapply(modelvars2[c(1,6:length(names(modelvars2)))], function(x) rescale(x))
modelvars2<-modelvars2[complete.cases(modelvars2),]
detach("package:arm", unload=TRUE)
require(Zelig)
z.out.hist1<-zelig(onsets ~ l.tvlong + d.tvlong + l.gdppc + d.gdppc + l.polity2 + d.polity2 + l2.polity2 + civil.wars +
l.onsets + d.onsets + states + Year,
model="negbinom",
robust=TRUE,
data=modelvars2,
cite=F)
# summary(z.out.hist1)
z.out.hist2<-zelig(onsets ~ l.tvlong + d.tvlong + l.gdppc + d.gdppc + l.polity2 + d.polity2 + l2.polity2 + civil.wars +
l.onsets + d.onsets + states + Year + ww1 + ww2 + cold,
model="negbinom",
robust=TRUE,
data=modelvars2,
cite=F)
# summary(z.out.hist2)
# plot(modelvars2$Year, z.out.hist3$result$residuals)
# plot(modelvars2$l.tvlong, z.out.hist3$result$residuals)
# plot(modelvars2$onsets, z.out.hist3$result$residuals)
modelvars2$imputed<-ifelse(modelvars2$Year<0.352, 1, 0) # scaled "1945"
z.out.hist3<-zelig(onsets ~ l.tvlong + d.tvlong + l.gdppc + d.gdppc + l.polity2 + d.polity2 + l2.polity2 + civil.wars +
l.onsets + d.onsets + states + Year + ww1 + ww2 + cold + imputed,
model="negbinom",
robust=TRUE,
data=modelvars2,
cite=F)
# summary(z.out.hist3)
z.out.hist2.unscaled<-zelig(onsets ~ l.tvlong + d.tvlong + l.gdppc + d.gdppc + l.polity2 + d.polity2 + l2.polity2 +
civil.wars + l.onsets + d.onsets + states + Year + ww1 + ww2 + cold,
model="negbinom",
robust=TRUE,
data=modelvars2.unscaled,
cite=F)
source("http://www.utdallas.edu/~pbrandt/code/pests.r")
pewmod<-Pewma(modelvars2$onsets ~ -1 + modelvars2$l.tvlong + modelvars2$l.gdppc + modelvars2$l.polity2 + modelvars2$l.civil.wars +
modelvars2$l.onsets + modelvars2$ww1 + modelvars2$ww2 + modelvars2$Year)
modelvars2<-subset(historical, select=c("Year", "d.civil.wars", "d.onsets", "onsets", "ww1", "ww2", "cold", "l.tvlong", "d.tvlong", "l.gdppc",
"l.polity2", "l2.polity2", "civil.wars", "l.civil.wars", "ld.onsets", "d2.civil.wars", "l.onsets", "l2.onsets",
"d2.onsets", "states"))
modelvars2<-modelvars2[complete.cases(modelvars2),]
pewmod<-Pewma(modelvars2$onsets ~ -1 + modelvars2$l.tvlong + modelvars2$l.gdppc + modelvars2$l.polity2 + modelvars2$l.civil.wars +
modelvars2$l.onsets + modelvars2$ww1 + modelvars2$ww2 + modelvars2$Year + modelvars2$states)
pewmod<-Pewma(modelvars2$onsets ~ -1 + modelvars2$l.tvlong + modelvars2$d.tvlong + modelvars2$l.gdppc + modelvars2$l.polity2 + modelvars2$l.civil.wars +
modelvars2$l.onsets + modelvars2$ww1 + modelvars2$ww2 + modelvars2$Year + modelvars2$states)
pewmod<-Pewma(modelvars2$onsets ~ -1 + modelvars2$l.tvlong + modelvars2$d.tvlong + modelvars2$l.gdppc + modelvars2$l.polity2 + modelvars2$l.civil.wars +
modelvars2$l.onsets + modelvars2$ww1 + modelvars2$ww2  + modelvars2$states)
?Pewma
pewmod<-Pewma(modelvars2$onsets ~ -1 + modelvars2$l.tvlong + modelvars2$d.tvlong + modelvars2$l.gdppc + modelvars2$l.polity2 + modelvars2$ww1 + modelvars2$ww2  + modelvars2$states)
pewmod<-Pewma(modelvars2$onsets ~ -1 + modelvars2$l.tvlong + modelvars2$d.tvlong + modelvars2$l.gdppc + modelvars2$l.polity2 +
modelvars2$Year + modelvars2$ww1 + modelvars2$ww2+ modelvars2$states)
options(scipen=999)
pewmod<-Pewma(modelvars2$onsets ~ -1 + modelvars2$l.tvlong + modelvars2$d.tvlong + modelvars2$l.gdppc + modelvars2$l.polity2 +
modelvars2$Year + modelvars2$ww1 + modelvars2$ww2+ modelvars2$states)
View(modelvars2)
pewmod<-Pewma(modelvars2$onsets ~ -1 + modelvars2$l.tvlong + modelvars2$d.tvlong + modelvars2$l.gdppc + modelvars2$l.polity2 +
modelvars2$Year + modelvars2$ww1 + modelvars2$ww2 + modelvars2$states)
modelvars2<-subset(historical, select=c("Year", "d.civil.wars", "d.onsets", "onsets", "ww1", "ww2", "cold", "l.tvlong", "d.tvlong", "l.gdppc",
"l.polity2", "l2.polity2", "civil.wars", "l.civil.wars", "ld.onsets", "d2.civil.wars", "l.onsets", "l2.onsets",
"d2.onsets", "states"))
modelvars2<-modelvars2[complete.cases(modelvars2),]
pewmod<-Pewma(modelvars2$onsets ~ -1 + modelvars2$l.tvlong + modelvars2$d.tvlong + modelvars2$l.gdppc + modelvars2$l.polity2 + modelvars2$l.civil.wars +
modelvars2$l.onsets + modelvars2$ww1 + modelvars2$ww2 + modelvars2$Year + modelvars2$states)
pewmod<-Pewma(modelvars2$onsets ~ -1 + modelvars2$l.tvlong + modelvars2$d.tvlong + modelvars2$l.gdppc + modelvars2$l.polity2 + modelvars2$l.civil.wars +
modelvars2$l.onsets + modelvars2$ww1 + modelvars2$ww2 + modelvars2$cold + modelvars2$Year + modelvars2$states)
pewmod<-Pewma(modelvars2$onsets ~ -1 + modelvars2$l.tvlong + modelvars2$d.tvlong + modelvars2$l.gdppc + modelvars2$l.polity2 + modelvars2$ww1 + modelvars2$ww2 + modelvars2$cold + modelvars2$Year + modelvars2$states)
modelvars2<-subset(historical, select=c("Year", "d.civil.wars", "d.onsets", "onsets", "ww1", "ww2", "cold", "l.tvlong", "d.tvlong", "l.gdppc",
"l.polity2", "l2.polity2", "civil.wars", "l.civil.wars", "d2.civil.wars", "l2.onsets",
"d2.onsets", "states"))
modelvars2<-modelvars2[complete.cases(modelvars2),]
pewmod<-Pewma(modelvars2$onsets ~ -1 + modelvars2$l.tvlong + modelvars2$d.tvlong + modelvars2$l.gdppc + modelvars2$l.polity2 + modelvars2$ww1 + modelvars2$ww2 + modelvars2$cold + modelvars2$Year + modelvars2$states)
